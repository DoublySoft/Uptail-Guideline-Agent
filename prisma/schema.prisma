// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  // Relations
  messages        Message[]
  guidelineUsages GuidelineUsage[]
  
  @@map("sessions")
}

model Message {
  id        String   @id @default(cuid())
  sessionId String
  role      String   // 'user' | 'assistant'
  content   String
  createdAt DateTime @default(now())
  
  // Relations
  session        Session         @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  guidelineUsages GuidelineUsage[]
  
  @@map("messages")
}

model GuidelineUsage {
  id          String   @id @default(cuid())
  sessionId   String
  messageId   String
  guidelineId String
  usedAt      DateTime @default(now())
  
  // Relations
  session   Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  message   Message   @relation(fields: [messageId], references: [id], onDelete: Cascade)
  guideline Guideline @relation(fields: [guidelineId], references: [id], onDelete: Cascade)
  
  @@map("guideline_usages")
}

model Guideline {
  id        String   @id @default(cuid())
  title     String
  content   String
  strength  GuidelineStrength
  priority  Int
  triggers  String[]
  use_once  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  guidelineUsages GuidelineUsage[]
  
  @@map("guidelines")
}

enum GuidelineStrength {
  hard
  soft
}
